//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "order")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: u32,
	#[sea_orm(unique)]
	pub job_order: String,
	pub customer: Option<i32>,
	pub salesman: i32,
	pub deal_date: Option<DateTime>,
	pub trade_mode: i8,
	pub delivery_time: Option<DateTime>,
	#[sea_orm(column_type = "Float")]
	pub density: f32,
	pub wrapper: Option<i32>,
	pub memo: Option<String>,
	pub produce_date: Option<DateTime>,
	pub factory: u8,
	pub quality: Option<String>,
	pub level: Option<String>,
	pub scheme_date: Option<DateTime>,
	pub wrapper_memo: Option<String>,
	pub plate_type: Option<String>,
	pub plate_size: Option<String>,
	pub plate_wrapper: Option<String>,
	pub roll_placement: Option<String>,
	pub other: Option<String>,
	pub packing: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
