//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "schedule")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: u32,
	pub length: i32,
	pub label_length: Option<i32>,
	pub roll: i32,
	#[sea_orm(column_type = "Float")]
	pub schedule_weight: f32,
	pub produced_date: Option<DateTime>,
	pub state: i8,
	pub origin: u8,
	pub r#type: String,
	#[sea_orm(column_type = "Float")]
	pub thickness: f32,
	pub label_thickness: Option<i32>,
	pub serial_number: i32,
	pub phase: u8,
	pub reason: Option<String>,
	pub line: u8,
	pub comment: Option<String>,
	pub width: u32,
	pub memo: Option<String>,
	pub delivery_time: Option<DateTime>,
	pub produced_roll: u32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
